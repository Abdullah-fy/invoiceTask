@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@using itRoot.ModelViews
@model CreateInvoiceVM

<div class="container">
    <h2>
        @localizer["CreateInvoice"]</h2>

    <form asp-action="Create" method="post" id="invoiceForm">
        <div asp-validation-summary="All" class="text-danger"></div>

        <div class="row mb-4">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="invoiceDate" class="control-label">@localizer["invoiceDate"]</label>
                    <input asp-for="invoiceDate" class="form-control" type="datetime-local" />
                    <span asp-validation-for="invoiceDate" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h4>@localizer["InvoiceItems"]</h4>
            </div>
            <div class="card-body">
                <div id="invoiceItems">
                        @for (int i = 0; i < Model.items.Count; i++)
                    {
                        <div class="invoice-item-row mb-3" data-index="@i">
                            <div class="row">
                                <div class="col-md-4">
                                    <label asp-for="@Model.items[i].productName" class="control-label">@localizer["ProductName"]</label>
                                    <input asp-for="@Model.items[i].productName" class="form-control" />
                                    <span asp-validation-for="@Model.items[i].productName" class="text-danger"></span>
                                </div>
                                <div class="col-md-2">
                                    <label asp-for="@Model.items[i].quantity" class="control-label">@localizer["Quantity"]</label>
                                    <input asp-for="@Model.items[i].quantity" class="form-control quantity-input" type="number" step="0.01" />
                                    <span asp-validation-for="@Model.items[i].quantity" class="text-danger"></span>
                                </div>
                                <div class="col-md-2">
                                    <label asp-for="@Model.items[i].price" class="control-label">@localizer["Price"]</label>
                                    <input asp-for="@Model.items[i].price" class="form-control price-input" type="number" step="0.01" />
                                    <span asp-validation-for="@Model.items[i].price" class="text-danger"></span>
                                </div>
                                <div class="col-md-2">
                                    <label class="control-label">@localizer["LineTotal"]</label>
                                    <input class="form-control line-total" readonly value="0.00" />
                                </div>
                                <div class="col-md-2">
                                    <label class="control-label">&nbsp;</label>
                                    <div>
                                        <button type="button" class="btn btn-danger btn-sm remove-item" style="margin-top: 5px;">
                                            <i class="fas fa-trash"></i> @localizer["Remove"]
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="row mt-3">
                    <div class="col-md-12">
                        <button type="button" id="addItem" class="btn btn-success">
                            <i class="fas fa-plus"></i> @localizer["AddItem"]
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-6 offset-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>@localizer["InvoiceSummary"]</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <strong>@localizer["TotalAmount"]</strong>
                            </div>
                            <div class="col-md-6 text-right">
                                <strong id="totalAmount">$0.00</strong>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary btn-lg">@localizer["CreateInvoice1"]</button>
                <a asp-action="Index" class="btn btn-secondary btn-lg">@localizer["Cancel"]</a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let itemIndex = @Model.items.Count;

        $(document).ready(function() {
            updateTotalAmount();
            $(document).on('input', '.quantity-input, .price-input', function() {
                calculateLineTotal($(this).closest('.invoice-item-row'));
                updateTotalAmount();
            });
            $('#addItem').click(function() {
                addNewItem();
            });
            $(document).on('click', '.remove-item', function() {
                if ($('.invoice-item-row').length > 1) {
                    $(this).closest('.invoice-item-row').remove();
                    updateTotalAmount();
                    updateItemIndices();
                } else {
                    alert('At least one item is required');
                }
            });
        });
        function addNewItem() {
            var newItem = `
                <div class="invoice-item-row mb-3" data-index="${itemIndex}">
                    <div class="row">
                        <div class="col-md-4">
                            <label class="control-label">Product Name</label>
                            <input name="items[${itemIndex}].productName" class="form-control" />
                            <span class="text-danger field-validation-valid" data-valmsg-for="items[${itemIndex}].productName" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Quantity</label>
                            <input name="items[${itemIndex}].quantity" class="form-control quantity-input" type="number" step="0.01" />
                            <span class="text-danger field-validation-valid" data-valmsg-for="items[${itemIndex}].quantity" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Price</label>
                            <input name="items[${itemIndex}].price" class="form-control price-input" type="number" step="0.01" />
                            <span class="text-danger field-validation-valid" data-valmsg-for="items[${itemIndex}].price" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Line Total</label>
                            <input class="form-control line-total" readonly value="0.00" />
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">&nbsp;</label>
                            <div>
                                <button type="button" class="btn btn-danger btn-sm remove-item" style="margin-top: 5px;">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </div>
                        </div>
                    </div>
                </div>`;

            $('#invoiceItems').append(newItem);
            itemIndex++;
        }
        function calculateLineTotal(row) {
            var quantity = parseFloat(row.find('.quantity-input').val()) || 0;
            var price = parseFloat(row.find('.price-input').val()) || 0;
            var lineTotal = quantity * price;
            row.find('.line-total').val(lineTotal.toFixed(2));
        }
        function updateTotalAmount() {
            var total = 0;
            $('.line-total').each(function() {
                total += parseFloat($(this).val()) || 0;
            });
            $('#totalAmount').text('$' + total.toFixed(2));
        }
        function updateItemIndices() {
            $('.invoice-item-row').each(function(index) {
                $(this).attr('data-index', index);
                $(this).find('input[name*="items["]').each(function() {
                    var name = $(this).attr('name');
                    var newName = name.replace(/items\[\d+\]/, 'items[' + index + ']');
                    $(this).attr('name', newName);
                });
                $(this).find('span[data-valmsg-for*="items["]').each(function() {
                    var valmsg = $(this).attr('data-valmsg-for');
                    var newValmsg = valmsg.replace(/items\[\d+\]/, 'items[' + index + ']');
                    $(this).attr('data-valmsg-for', newValmsg);
                });
            });
        }
    </script>
}